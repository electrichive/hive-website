{"version":3,"file":"component---src-pages-home-index-tsx-7a02ba7b9cdb710dfc4a.js","mappings":"uNAE+BA,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,kCAArB,MAKMC,EAAgBD,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,qL,inBC8B1B,SAASE,EAAUC,GACf,OACI,SAAC,KAAD,WACI,SAACF,EAAD,UACKE,EAAMC,UAAUC,KAAI,CAACC,EAASC,KAC3B,SAAC,KAAD,OAEQD,GAFR,IAGIE,MAAOD,EAAI,GAAM,EAAI,QAAU,SAF1BA,QAQ5B,CAEc,SAASE,IAEpB,MAAMC,GAAQC,EAAAA,EAAAA,gBAAe,cAmBvBC,GAASC,EAAAA,EAAAA,KACTC,EAAUJ,EAAMK,YAAYC,MAAM,GAAGC,KAAKH,QAC1CI,EAA0BR,EAAMK,YAAYC,MAAM,GAAGC,KAAKC,WAC1Dd,EACFM,EAAMK,YAAYC,MAAM,GAAGC,KAAKC,WAG9BC,IADsBC,EAAAA,EAAAA,IAAeR,EAAQM,IACxBE,EAAAA,EAAAA,IAAeR,EAAQR,IAElD,OACI,UAAC,KAAD,YACI,SAAC,KAAD,CACIiB,MAAM,oBACNC,SAAS,6BACTC,QAAQ,KAGZ,SAACrB,EAAD,CAAWE,UAAWe,KACtB,SAAC,KAAD,CACIK,IAAI,eACJC,KAAK,UACLC,KAAKC,EAAAA,EAAAA,IAAcf,EAAQ,mBAC3BS,MAAM,qCAEV,SAAC,KAAD,CACIA,MAAM,yBACNO,YAAad,EAAQc,YACrBC,QAAQ,MACRrB,MAAM,WAIrB,C","sources":["webpack://electric-hive-website-2.0/./src/styles/page-styles/home/home.styled.tsx","webpack://electric-hive-website-2.0/./src/pages/home/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ImagesContainer = styled.div`\n    width: 70%;\n    text-align: center;\n`;\n\nexport const FlipContainer = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 300px;\n    @media only screen and (max-width: 1000px) {\n        flex-direction: column;\n        align-items: center;\n    }\n`;\n","import {\n    Infoimage,\n    Infobox,\n    Layout,\n    Parallax,\n    Slide,\n    Flipbox,\n    FadeInSection,\n} from 'components';\nimport {\n    ImagesContainer,\n    FlipContainer,\n} from '../../styles/page-styles/home/home.styled';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { mapUrlsToProps, findImagePath } from 'src/utils';\nimport { useImageUrls } from 'src/graphql/queries/images';\n\n/**\n * Local component for displaying InfoImage components\n */\nfunction InfoImages(props: InfoImagesProps): JSX.Element {\n    return (\n        <ImagesContainer>\n            {props.infoimages.map((infoimage, i) => (\n                <Infoimage\n                    key={i}\n                    direction={i % 2 === 0 ? 'left' : 'right'}\n                    {...infoimage}\n                />\n            ))}\n        </ImagesContainer>\n    );\n}\n\n/**\n * Local component for displaying Flipboxes components\n */\nfunction Flipboxes(props: FlipboxesProps): JSX.Element {\n    return (\n        <FadeInSection>\n            <FlipContainer>\n                {props.flipboxes.map((flipbox, i) => (\n                    <Flipbox\n                        key={i}\n                        {...flipbox}\n                        theme={i % 2 === 0 ? 'light' : 'dark'}\n                    />\n                ))}\n            </FlipContainer>\n        </FadeInSection>\n    );\n}\n\nexport default function PageHome(): JSX.Element {\n    // query site metadata for page content\n    const query = useStaticQuery(graphql`\n        query HomeQuery {\n            allHomeJson {\n                edges {\n                    node {\n                        infobox {\n                            description\n                        }\n                        infoimages {\n                            content\n                            img\n                            subtitle\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    const images = useImageUrls();\n    const infobox = query.allHomeJson.edges[0].node.infobox;\n    const infoimages: InfoImage[] = query.allHomeJson.edges[0].node.infoimages;\n    const flipboxes: typeof Flipbox[] =\n        query.allHomeJson.edges[0].node.infoimages;\n\n    const formattedInfoimages = mapUrlsToProps(images, infoimages);\n    const formattedFlipboxes = mapUrlsToProps(images, flipboxes);\n\n    return (\n        <Layout>\n            <Slide\n                title=\"The Electric Hive\"\n                subtitle=\"Subtitle Mission Statement\"\n                button={true}\n            />\n            {/* <InfoImages infoimages={formattedInfoimages} /> */}\n            <Flipboxes flipboxes={formattedFlipboxes} />\n            <Parallax\n                url=\"./mentorship\"\n                text=\"Sign Up\"\n                img={findImagePath(images, 'stock-code1.jpg')}\n                title=\"Join Our Mentorship Program Now\"\n            />\n            <Infobox\n                title=\"Contribute To Our FOSS\"\n                description={infobox.description}\n                content=\"...\"\n                theme=\"dark\"\n            />\n        </Layout>\n    );\n}\n"],"names":["styled","FlipContainer","Flipboxes","props","flipboxes","map","flipbox","i","theme","PageHome","query","useStaticQuery","images","useImageUrls","infobox","allHomeJson","edges","node","infoimages","formattedFlipboxes","mapUrlsToProps","title","subtitle","button","url","text","img","findImagePath","description","content"],"sourceRoot":""}